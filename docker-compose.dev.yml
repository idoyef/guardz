services:
  database:
    image: postgres:15-alpine
    container_name: user-entries-db-dev
    restart: unless-stopped
    environment:
      DB_DATABASE: user_entries
      DB_USERNAME: postgres
      DB_PASSWORD: password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - '127.0.0.1:5432:5432'
    networks:
      - app-network-dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: user-entries-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 8080
      DB_HOST: database
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: user_entries
    ports:
      - '127.0.0.1:8080:8080'
    depends_on:
      - database
    networks:
      - app-network-dev
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: user-entries-frontend-dev
    restart: unless-stopped
    environment:
      VITE_API_BASE: /api
      CHOKIDAR_USEPOLLING: 'true'
      CI: 'true'
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      - backend
    networks:
      - app-network-dev
    volumes:
      - ./frontend:/app
      - frontend_node_modules_dev:/app/node_modules
    command: >
      sh -lc "
        pnpm install --frozen-lockfile || pnpm install &&
        pnpm dev --host 0.0.0.0 --port 3000
      "

networks:
  app-network-dev:
    driver: bridge
    name: user-entries-network-dev

volumes:
  postgres_data_dev:
    driver: local
    name: user-entries-postgres-data-dev
  frontend_node_modules_dev:
    driver: local
    name: user-entries-frontend-node-modules-dev
